<?xml version="1.0" encoding="UTF-8"?>
<project name="Enterprise for Everyone" default="env">

    <property name="drush" value="${project.basedir}/bin/drush" />
    <property name="composer" value="/usr/local/bin/composer" />
    <property name="npm" value="/usr/local/bin/npm" />
    <property name="rsync" value="/usr/bin/rsync" />
    <property name="web" value="web" />
    <property name="profile" value="${web}/profiles/jnjcanvas" />
    <property name="site" value="${web}/sites/default" />
    <property name="version" value="HEAD" />

    <!-- Finds Composer, NPM, and rsync. -->
    <target name="env">
        <if>
            <not>
                <available file="${drush}" property="drush.exists" />
            </not>
            <then>
                <exec command="which drush" outputProperty="drush" />
            </then>
        </if>
        <exec command="which composer" outputProperty="composer" />
        <exec command="which npm" outputProperty="npm" />
        <exec command="which rsync" outputProperty="rsync" />

        <echo message="Found Drush: ${drush}" />
        <echo message="Found Composer: ${composer}" />
        <echo message="Found NPM: ${npm}" />
        <echo message="Found rsync: ${rsync}" />
    </target>

    <!-- Syncs the profile into the Drupal code base. -->
    <target name="build" depends="env">
        <!-- Create the destination if it doesn't exist. -->
        <mkdir dir="${profile}" />
        <mkdir dir="${profile}/config" />
        <mkdir dir="${site}" />
        <chmod file="${site}" mode="0775" />
        <mkdir dir="config/sync"/>

        <symlink link="${profile}" relative="true" overwrite="true">
            <fileset dir=".">
                <include name="*.profile"/>
                <include name="*.install"/>
                <include name="*.info.yml"/>
                <include name="modules"/>
                <include name="themes"/>
            </fileset>
        </symlink>

        <symlink target="../../../../config/install" link="${profile}/config/install" relative="true" overwrite="true" />

        <!-- Use the Platform.sh settings.php file for all builds. -->
        <if>
            <available file='${site}/settings.php' />
            <then>
                <chmod file="${site}/settings.php" mode="0775" />
            </then>
            <else>
                <httpget url="https://raw.githubusercontent.com/platformsh/platformsh-example-drupal8/master/web/sites/default/settings.php" dir="${site}"/>
            </else>
        </if>


    </target>

    <!-- Copies the platform files. -->
    <target name="platform-build">
        <httpget url="https://raw.githubusercontent.com/platformsh/platformsh-example-drupal8/master/web/sites/default/settings.platformsh.php" dir="${site}"/>
    </target>

    <!-- Copies files for local dev. -->
    <target name="lando-build">
        <copy file="${application.startdir}/dev/settings.local.php" tofile="${web}/sites/default/settings.local.php" overwrite="false"/>
        <copy file="${application.startdir}/dev/development.services.yml" tofile="${web}/sites/development.services.yml" overwrite="false"/>
    </target>

    <!-- Destroys the installed code base. -->
    <target name="destroy">
        <delete failonerror="true" includeemptydirs="true">
            <fileset dir="." defaultexcludes="false">
                <include name="${web}/**" />
                <include name="vendor/**" />
                <include name="composer.lock" />
            </fileset>
        </delete>
    </target>
</project>